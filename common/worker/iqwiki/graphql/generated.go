// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package graphql

import (
	"context"
	"time"

	"github.com/Khan/genqlient/graphql"
)

// GetUserActivitiesActivitiesByUserActivity includes the requested fields of the GraphQL type Activity.
type GetUserActivitiesActivitiesByUserActivity struct {
	Id       string                                                 `json:"id"`
	User     GetUserActivitiesActivitiesByUserActivityUser          `json:"user"`
	WikiId   string                                                 `json:"wikiId"`
	Block    int                                                    `json:"block"`
	Type     Status                                                 `json:"type"`
	Datetime time.Time                                              `json:"datetime"`
	Ipfs     string                                                 `json:"ipfs"`
	Content  []GetUserActivitiesActivitiesByUserActivityContentWiki `json:"content"`
}

// GetId returns GetUserActivitiesActivitiesByUserActivity.Id, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesActivitiesByUserActivity) GetId() string { return v.Id }

// GetUser returns GetUserActivitiesActivitiesByUserActivity.User, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesActivitiesByUserActivity) GetUser() GetUserActivitiesActivitiesByUserActivityUser {
	return v.User
}

// GetWikiId returns GetUserActivitiesActivitiesByUserActivity.WikiId, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesActivitiesByUserActivity) GetWikiId() string { return v.WikiId }

// GetBlock returns GetUserActivitiesActivitiesByUserActivity.Block, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesActivitiesByUserActivity) GetBlock() int { return v.Block }

// GetType returns GetUserActivitiesActivitiesByUserActivity.Type, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesActivitiesByUserActivity) GetType() Status { return v.Type }

// GetDatetime returns GetUserActivitiesActivitiesByUserActivity.Datetime, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesActivitiesByUserActivity) GetDatetime() time.Time { return v.Datetime }

// GetIpfs returns GetUserActivitiesActivitiesByUserActivity.Ipfs, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesActivitiesByUserActivity) GetIpfs() string { return v.Ipfs }

// GetContent returns GetUserActivitiesActivitiesByUserActivity.Content, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesActivitiesByUserActivity) GetContent() []GetUserActivitiesActivitiesByUserActivityContentWiki {
	return v.Content
}

// GetUserActivitiesActivitiesByUserActivityContentWiki includes the requested fields of the GraphQL type Wiki.
type GetUserActivitiesActivitiesByUserActivityContentWiki struct {
	Id              string                                                                   `json:"id"`
	Title           string                                                                   `json:"title"`
	Summary         string                                                                   `json:"summary"`
	Created         time.Time                                                                `json:"created"`
	Updated         time.Time                                                                `json:"updated"`
	Block           int                                                                      `json:"block"`
	TransactionHash string                                                                   `json:"transactionHash"`
	Ipfs            string                                                                   `json:"ipfs"`
	User            GetUserActivitiesActivitiesByUserActivityContentWikiUser                 `json:"user"`
	Author          GetUserActivitiesActivitiesByUserActivityContentWikiAuthor               `json:"author"`
	Categories      []GetUserActivitiesActivitiesByUserActivityContentWikiCategoriesCategory `json:"categories"`
	Tags            []GetUserActivitiesActivitiesByUserActivityContentWikiTagsTag            `json:"tags"`
	Images          []GetUserActivitiesActivitiesByUserActivityContentWikiImagesImage        `json:"images"`
	Metadata        []GetUserActivitiesActivitiesByUserActivityContentWikiMetadata           `json:"metadata"`
}

// GetId returns GetUserActivitiesActivitiesByUserActivityContentWiki.Id, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesActivitiesByUserActivityContentWiki) GetId() string { return v.Id }

// GetTitle returns GetUserActivitiesActivitiesByUserActivityContentWiki.Title, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesActivitiesByUserActivityContentWiki) GetTitle() string { return v.Title }

// GetSummary returns GetUserActivitiesActivitiesByUserActivityContentWiki.Summary, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesActivitiesByUserActivityContentWiki) GetSummary() string { return v.Summary }

// GetCreated returns GetUserActivitiesActivitiesByUserActivityContentWiki.Created, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesActivitiesByUserActivityContentWiki) GetCreated() time.Time {
	return v.Created
}

// GetUpdated returns GetUserActivitiesActivitiesByUserActivityContentWiki.Updated, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesActivitiesByUserActivityContentWiki) GetUpdated() time.Time {
	return v.Updated
}

// GetBlock returns GetUserActivitiesActivitiesByUserActivityContentWiki.Block, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesActivitiesByUserActivityContentWiki) GetBlock() int { return v.Block }

// GetTransactionHash returns GetUserActivitiesActivitiesByUserActivityContentWiki.TransactionHash, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesActivitiesByUserActivityContentWiki) GetTransactionHash() string {
	return v.TransactionHash
}

// GetIpfs returns GetUserActivitiesActivitiesByUserActivityContentWiki.Ipfs, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesActivitiesByUserActivityContentWiki) GetIpfs() string { return v.Ipfs }

// GetUser returns GetUserActivitiesActivitiesByUserActivityContentWiki.User, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesActivitiesByUserActivityContentWiki) GetUser() GetUserActivitiesActivitiesByUserActivityContentWikiUser {
	return v.User
}

// GetAuthor returns GetUserActivitiesActivitiesByUserActivityContentWiki.Author, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesActivitiesByUserActivityContentWiki) GetAuthor() GetUserActivitiesActivitiesByUserActivityContentWikiAuthor {
	return v.Author
}

// GetCategories returns GetUserActivitiesActivitiesByUserActivityContentWiki.Categories, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesActivitiesByUserActivityContentWiki) GetCategories() []GetUserActivitiesActivitiesByUserActivityContentWikiCategoriesCategory {
	return v.Categories
}

// GetTags returns GetUserActivitiesActivitiesByUserActivityContentWiki.Tags, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesActivitiesByUserActivityContentWiki) GetTags() []GetUserActivitiesActivitiesByUserActivityContentWikiTagsTag {
	return v.Tags
}

// GetImages returns GetUserActivitiesActivitiesByUserActivityContentWiki.Images, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesActivitiesByUserActivityContentWiki) GetImages() []GetUserActivitiesActivitiesByUserActivityContentWikiImagesImage {
	return v.Images
}

// GetMetadata returns GetUserActivitiesActivitiesByUserActivityContentWiki.Metadata, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesActivitiesByUserActivityContentWiki) GetMetadata() []GetUserActivitiesActivitiesByUserActivityContentWikiMetadata {
	return v.Metadata
}

// GetUserActivitiesActivitiesByUserActivityContentWikiAuthor includes the requested fields of the GraphQL type Author.
type GetUserActivitiesActivitiesByUserActivityContentWikiAuthor struct {
	Id string `json:"id"`
}

// GetId returns GetUserActivitiesActivitiesByUserActivityContentWikiAuthor.Id, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesActivitiesByUserActivityContentWikiAuthor) GetId() string { return v.Id }

// GetUserActivitiesActivitiesByUserActivityContentWikiCategoriesCategory includes the requested fields of the GraphQL type Category.
type GetUserActivitiesActivitiesByUserActivityContentWikiCategoriesCategory struct {
	Id    string `json:"id"`
	Title string `json:"title"`
}

// GetId returns GetUserActivitiesActivitiesByUserActivityContentWikiCategoriesCategory.Id, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesActivitiesByUserActivityContentWikiCategoriesCategory) GetId() string {
	return v.Id
}

// GetTitle returns GetUserActivitiesActivitiesByUserActivityContentWikiCategoriesCategory.Title, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesActivitiesByUserActivityContentWikiCategoriesCategory) GetTitle() string {
	return v.Title
}

// GetUserActivitiesActivitiesByUserActivityContentWikiImagesImage includes the requested fields of the GraphQL type Image.
type GetUserActivitiesActivitiesByUserActivityContentWikiImagesImage struct {
	Id   string `json:"id"`
	Type string `json:"type"`
}

// GetId returns GetUserActivitiesActivitiesByUserActivityContentWikiImagesImage.Id, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesActivitiesByUserActivityContentWikiImagesImage) GetId() string { return v.Id }

// GetType returns GetUserActivitiesActivitiesByUserActivityContentWikiImagesImage.Type, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesActivitiesByUserActivityContentWikiImagesImage) GetType() string {
	return v.Type
}

// GetUserActivitiesActivitiesByUserActivityContentWikiMetadata includes the requested fields of the GraphQL type Metadata.
type GetUserActivitiesActivitiesByUserActivityContentWikiMetadata struct {
	Id    string `json:"id"`
	Value string `json:"value"`
}

// GetId returns GetUserActivitiesActivitiesByUserActivityContentWikiMetadata.Id, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesActivitiesByUserActivityContentWikiMetadata) GetId() string { return v.Id }

// GetValue returns GetUserActivitiesActivitiesByUserActivityContentWikiMetadata.Value, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesActivitiesByUserActivityContentWikiMetadata) GetValue() string {
	return v.Value
}

// GetUserActivitiesActivitiesByUserActivityContentWikiTagsTag includes the requested fields of the GraphQL type Tag.
type GetUserActivitiesActivitiesByUserActivityContentWikiTagsTag struct {
	Id string `json:"id"`
}

// GetId returns GetUserActivitiesActivitiesByUserActivityContentWikiTagsTag.Id, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesActivitiesByUserActivityContentWikiTagsTag) GetId() string { return v.Id }

// GetUserActivitiesActivitiesByUserActivityContentWikiUser includes the requested fields of the GraphQL type User.
type GetUserActivitiesActivitiesByUserActivityContentWikiUser struct {
	Id string `json:"id"`
}

// GetId returns GetUserActivitiesActivitiesByUserActivityContentWikiUser.Id, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesActivitiesByUserActivityContentWikiUser) GetId() string { return v.Id }

// GetUserActivitiesActivitiesByUserActivityUser includes the requested fields of the GraphQL type User.
type GetUserActivitiesActivitiesByUserActivityUser struct {
	Id string `json:"id"`
}

// GetId returns GetUserActivitiesActivitiesByUserActivityUser.Id, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesActivitiesByUserActivityUser) GetId() string { return v.Id }

// GetUserActivitiesResponse is returned by GetUserActivities on success.
type GetUserActivitiesResponse struct {
	ActivitiesByUser []GetUserActivitiesActivitiesByUserActivity `json:"activitiesByUser"`
}

// GetActivitiesByUser returns GetUserActivitiesResponse.ActivitiesByUser, and is useful for accessing the field via an interface.
func (v *GetUserActivitiesResponse) GetActivitiesByUser() []GetUserActivitiesActivitiesByUserActivity {
	return v.ActivitiesByUser
}

type Status string

const (
	StatusCreated Status = "CREATED"
	StatusUpdated Status = "UPDATED"
)

// __GetUserActivitiesInput is used internally by genqlient
type __GetUserActivitiesInput struct {
	UserId string `json:"userId"`
	Limit  int    `json:"limit"`
	Offset int    `json:"offset"`
}

// GetUserId returns __GetUserActivitiesInput.UserId, and is useful for accessing the field via an interface.
func (v *__GetUserActivitiesInput) GetUserId() string { return v.UserId }

// GetLimit returns __GetUserActivitiesInput.Limit, and is useful for accessing the field via an interface.
func (v *__GetUserActivitiesInput) GetLimit() int { return v.Limit }

// GetOffset returns __GetUserActivitiesInput.Offset, and is useful for accessing the field via an interface.
func (v *__GetUserActivitiesInput) GetOffset() int { return v.Offset }

func GetUserActivities(
	ctx context.Context,
	client graphql.Client,
	userId string,
	limit int,
	offset int,
) (*GetUserActivitiesResponse, error) {
	req := &graphql.Request{
		OpName: "GetUserActivities",
		Query: `
query GetUserActivities ($userId: String!, $limit: Int, $offset: Int) {
	activitiesByUser(offset: $offset, limit: $limit, userId: $userId) {
		id
		user {
			id
		}
		wikiId
		block
		type
		datetime
		ipfs
		content {
			id
			title
			summary
			created
			updated
			block
			transactionHash
			ipfs
			user {
				id
			}
			author {
				id
			}
			categories {
				id
				title
			}
			tags {
				id
			}
			images {
				id
				type
			}
			metadata {
				id
				value
			}
		}
	}
}
`,
		Variables: &__GetUserActivitiesInput{
			UserId: userId,
			Limit:  limit,
			Offset: offset,
		},
	}
	var err error

	var data GetUserActivitiesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
