// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package schema

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// ReleaseContractReleaseContractRelease includes the requested fields of the GraphQL type Release.
// The GraphQL type's documentation follows.
//
// Release entity
type ReleaseContractReleaseContractRelease struct {
	// Cover image of release
	CoverImage ReleaseContractReleaseContractReleaseCoverImageMedia `json:"coverImage"`
	// Associated opensea url
	OpenseaUrl string `json:"openseaUrl"`
	// Price in Wei
	Price       string `json:"price"`
	TotalSupply int    `json:"totalSupply"`
}

// GetCoverImage returns ReleaseContractReleaseContractRelease.CoverImage, and is useful for accessing the field via an interface.
func (v *ReleaseContractReleaseContractRelease) GetCoverImage() ReleaseContractReleaseContractReleaseCoverImageMedia {
	return v.CoverImage
}

// GetOpenseaUrl returns ReleaseContractReleaseContractRelease.OpenseaUrl, and is useful for accessing the field via an interface.
func (v *ReleaseContractReleaseContractRelease) GetOpenseaUrl() string { return v.OpenseaUrl }

// GetPrice returns ReleaseContractReleaseContractRelease.Price, and is useful for accessing the field via an interface.
func (v *ReleaseContractReleaseContractRelease) GetPrice() string { return v.Price }

// GetTotalSupply returns ReleaseContractReleaseContractRelease.TotalSupply, and is useful for accessing the field via an interface.
func (v *ReleaseContractReleaseContractRelease) GetTotalSupply() int { return v.TotalSupply }

// ReleaseContractReleaseContractReleaseCoverImageMedia includes the requested fields of the GraphQL type Media.
// The GraphQL type's documentation follows.
//
// Media entity
type ReleaseContractReleaseContractReleaseCoverImageMedia struct {
	// CDN Url
	Url string `json:"url"`
}

// GetUrl returns ReleaseContractReleaseContractReleaseCoverImageMedia.Url, and is useful for accessing the field via an interface.
func (v *ReleaseContractReleaseContractReleaseCoverImageMedia) GetUrl() string { return v.Url }

// ReleaseContractResponse is returned by ReleaseContract on success.
type ReleaseContractResponse struct {
	// [PUBLIC] Get release by contract address
	ReleaseContract ReleaseContractReleaseContractRelease `json:"releaseContract"`
}

// GetReleaseContract returns ReleaseContractResponse.ReleaseContract, and is useful for accessing the field via an interface.
func (v *ReleaseContractResponse) GetReleaseContract() ReleaseContractReleaseContractRelease {
	return v.ReleaseContract
}

// ReleaseNftsReleaseContractRelease includes the requested fields of the GraphQL type Release.
// The GraphQL type's documentation follows.
//
// Release entity
type ReleaseNftsReleaseContractRelease struct {
	// Cover image of release
	CoverImage ReleaseNftsReleaseContractReleaseCoverImageMedia `json:"coverImage"`
	// Associated opensea url
	OpenseaUrl string `json:"openseaUrl"`
	// Price in Wei
	Price       string `json:"price"`
	TotalSupply int    `json:"totalSupply"`
	// NFTs of Release
	NftsPaginated ReleaseNftsReleaseContractReleaseNftsPaginatedNftConnection `json:"nftsPaginated"`
}

// GetCoverImage returns ReleaseNftsReleaseContractRelease.CoverImage, and is useful for accessing the field via an interface.
func (v *ReleaseNftsReleaseContractRelease) GetCoverImage() ReleaseNftsReleaseContractReleaseCoverImageMedia {
	return v.CoverImage
}

// GetOpenseaUrl returns ReleaseNftsReleaseContractRelease.OpenseaUrl, and is useful for accessing the field via an interface.
func (v *ReleaseNftsReleaseContractRelease) GetOpenseaUrl() string { return v.OpenseaUrl }

// GetPrice returns ReleaseNftsReleaseContractRelease.Price, and is useful for accessing the field via an interface.
func (v *ReleaseNftsReleaseContractRelease) GetPrice() string { return v.Price }

// GetTotalSupply returns ReleaseNftsReleaseContractRelease.TotalSupply, and is useful for accessing the field via an interface.
func (v *ReleaseNftsReleaseContractRelease) GetTotalSupply() int { return v.TotalSupply }

// GetNftsPaginated returns ReleaseNftsReleaseContractRelease.NftsPaginated, and is useful for accessing the field via an interface.
func (v *ReleaseNftsReleaseContractRelease) GetNftsPaginated() ReleaseNftsReleaseContractReleaseNftsPaginatedNftConnection {
	return v.NftsPaginated
}

// ReleaseNftsReleaseContractReleaseCoverImageMedia includes the requested fields of the GraphQL type Media.
// The GraphQL type's documentation follows.
//
// Media entity
type ReleaseNftsReleaseContractReleaseCoverImageMedia struct {
	// CDN Url
	Url string `json:"url"`
}

// GetUrl returns ReleaseNftsReleaseContractReleaseCoverImageMedia.Url, and is useful for accessing the field via an interface.
func (v *ReleaseNftsReleaseContractReleaseCoverImageMedia) GetUrl() string { return v.Url }

// ReleaseNftsReleaseContractReleaseNftsPaginatedNftConnection includes the requested fields of the GraphQL type NftConnection.
// The GraphQL type's documentation follows.
//
// Paginated NFTs connection
type ReleaseNftsReleaseContractReleaseNftsPaginatedNftConnection struct {
	// Edges of current page
	Edges []ReleaseNftsReleaseContractReleaseNftsPaginatedNftConnectionEdgesNftConnectionEdge `json:"edges"`
	// Pagination helpers information
	PageInfo ReleaseNftsReleaseContractReleaseNftsPaginatedNftConnectionPageInfo `json:"pageInfo"`
}

// GetEdges returns ReleaseNftsReleaseContractReleaseNftsPaginatedNftConnection.Edges, and is useful for accessing the field via an interface.
func (v *ReleaseNftsReleaseContractReleaseNftsPaginatedNftConnection) GetEdges() []ReleaseNftsReleaseContractReleaseNftsPaginatedNftConnectionEdgesNftConnectionEdge {
	return v.Edges
}

// GetPageInfo returns ReleaseNftsReleaseContractReleaseNftsPaginatedNftConnection.PageInfo, and is useful for accessing the field via an interface.
func (v *ReleaseNftsReleaseContractReleaseNftsPaginatedNftConnection) GetPageInfo() ReleaseNftsReleaseContractReleaseNftsPaginatedNftConnectionPageInfo {
	return v.PageInfo
}

// ReleaseNftsReleaseContractReleaseNftsPaginatedNftConnectionEdgesNftConnectionEdge includes the requested fields of the GraphQL type NftConnectionEdge.
// The GraphQL type's documentation follows.
//
// NFT Node edge
type ReleaseNftsReleaseContractReleaseNftsPaginatedNftConnectionEdgesNftConnectionEdge struct {
	// NFT Entity
	Node ReleaseNftsReleaseContractReleaseNftsPaginatedNftConnectionEdgesNftConnectionEdgeNodeNft `json:"node"`
}

// GetNode returns ReleaseNftsReleaseContractReleaseNftsPaginatedNftConnectionEdgesNftConnectionEdge.Node, and is useful for accessing the field via an interface.
func (v *ReleaseNftsReleaseContractReleaseNftsPaginatedNftConnectionEdgesNftConnectionEdge) GetNode() ReleaseNftsReleaseContractReleaseNftsPaginatedNftConnectionEdgesNftConnectionEdgeNodeNft {
	return v.Node
}

// ReleaseNftsReleaseContractReleaseNftsPaginatedNftConnectionEdgesNftConnectionEdgeNodeNft includes the requested fields of the GraphQL type Nft.
// The GraphQL type's documentation follows.
//
// NFT Entity
type ReleaseNftsReleaseContractReleaseNftsPaginatedNftConnectionEdgesNftConnectionEdgeNodeNft struct {
	// Unique chain token identifier
	TokenId string `json:"tokenId"`
}

// GetTokenId returns ReleaseNftsReleaseContractReleaseNftsPaginatedNftConnectionEdgesNftConnectionEdgeNodeNft.TokenId, and is useful for accessing the field via an interface.
func (v *ReleaseNftsReleaseContractReleaseNftsPaginatedNftConnectionEdgesNftConnectionEdgeNodeNft) GetTokenId() string {
	return v.TokenId
}

// ReleaseNftsReleaseContractReleaseNftsPaginatedNftConnectionPageInfo includes the requested fields of the GraphQL type PageInfo.
// The GraphQL type's documentation follows.
//
// Pagination helper information
type ReleaseNftsReleaseContractReleaseNftsPaginatedNftConnectionPageInfo struct {
	// Cursor shorthand of the last node from current page
	EndCursor string `json:"endCursor"`
	// Does the current connection have a next page
	HasNextPage bool `json:"hasNextPage"`
}

// GetEndCursor returns ReleaseNftsReleaseContractReleaseNftsPaginatedNftConnectionPageInfo.EndCursor, and is useful for accessing the field via an interface.
func (v *ReleaseNftsReleaseContractReleaseNftsPaginatedNftConnectionPageInfo) GetEndCursor() string {
	return v.EndCursor
}

// GetHasNextPage returns ReleaseNftsReleaseContractReleaseNftsPaginatedNftConnectionPageInfo.HasNextPage, and is useful for accessing the field via an interface.
func (v *ReleaseNftsReleaseContractReleaseNftsPaginatedNftConnectionPageInfo) GetHasNextPage() bool {
	return v.HasNextPage
}

// ReleaseNftsResponse is returned by ReleaseNfts on success.
type ReleaseNftsResponse struct {
	// [PUBLIC] Get release by contract address
	ReleaseContract ReleaseNftsReleaseContractRelease `json:"releaseContract"`
}

// GetReleaseContract returns ReleaseNftsResponse.ReleaseContract, and is useful for accessing the field via an interface.
func (v *ReleaseNftsResponse) GetReleaseContract() ReleaseNftsReleaseContractRelease {
	return v.ReleaseContract
}

// __ReleaseContractInput is used internally by genqlient
type __ReleaseContractInput struct {
	ContractAddress string `json:"contractAddress"`
	EditionId       string `json:"editionId"`
}

// GetContractAddress returns __ReleaseContractInput.ContractAddress, and is useful for accessing the field via an interface.
func (v *__ReleaseContractInput) GetContractAddress() string { return v.ContractAddress }

// GetEditionId returns __ReleaseContractInput.EditionId, and is useful for accessing the field via an interface.
func (v *__ReleaseContractInput) GetEditionId() string { return v.EditionId }

// __ReleaseNftsInput is used internally by genqlient
type __ReleaseNftsInput struct {
	ContractAddress string `json:"contractAddress"`
	EditionId       string `json:"editionId"`
	After           string `json:"after"`
}

// GetContractAddress returns __ReleaseNftsInput.ContractAddress, and is useful for accessing the field via an interface.
func (v *__ReleaseNftsInput) GetContractAddress() string { return v.ContractAddress }

// GetEditionId returns __ReleaseNftsInput.EditionId, and is useful for accessing the field via an interface.
func (v *__ReleaseNftsInput) GetEditionId() string { return v.EditionId }

// GetAfter returns __ReleaseNftsInput.After, and is useful for accessing the field via an interface.
func (v *__ReleaseNftsInput) GetAfter() string { return v.After }

func ReleaseContract(
	ctx context.Context,
	client graphql.Client,
	contractAddress string,
	editionId string,
) (*ReleaseContractResponse, error) {
	req := &graphql.Request{
		OpName: "ReleaseContract",
		Query: `
query ReleaseContract ($contractAddress: Address!, $editionId: String) {
	releaseContract(contractAddress: $contractAddress, editionId: $editionId) {
		coverImage {
			url
		}
		openseaUrl
		price
		totalSupply
	}
}
`,
		Variables: &__ReleaseContractInput{
			ContractAddress: contractAddress,
			EditionId:       editionId,
		},
	}
	var err error

	var data ReleaseContractResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func ReleaseNfts(
	ctx context.Context,
	client graphql.Client,
	contractAddress string,
	editionId string,
	after string,
) (*ReleaseNftsResponse, error) {
	req := &graphql.Request{
		OpName: "ReleaseNfts",
		Query: `
query ReleaseNfts ($contractAddress: Address!, $editionId: String, $after: String) {
	releaseContract(contractAddress: $contractAddress, editionId: $editionId) {
		coverImage {
			url
		}
		openseaUrl
		price
		totalSupply
		nftsPaginated(pagination: {first:50,after:$after}) {
			edges {
				node {
					tokenId
				}
			}
			pageInfo {
				endCursor
				hasNextPage
			}
		}
	}
}
`,
		Variables: &__ReleaseNftsInput{
			ContractAddress: contractAddress,
			EditionId:       editionId,
			After:           after,
		},
	}
	var err error

	var data ReleaseNftsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
